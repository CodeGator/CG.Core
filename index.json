{
  "api/CG.Cryptography.CryptographyException.html": {
    "href": "api/CG.Cryptography.CryptographyException.html",
    "title": "Class CryptographyException",
    "keywords": "Class CryptographyException This class represents a cryptography related exception. Inheritance System.Object CryptographyException Namespace : CG.Cryptography Assembly : CG.Cryptography.dll Syntax public class CryptographyException : Exception Constructors CryptographyException() This constructor creates a new instance of the CryptographyException class. Declaration public CryptographyException() CryptographyException(SerializationInfo, StreamingContext) This constructor creates a new instance of the CryptographyException class. Declaration public CryptographyException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info to use for the exception. StreamingContext context The streaming context to use for the exception. CryptographyException(String) This constructor creates a new instance of the CryptographyException class. Declaration public CryptographyException(string message) Parameters Type Name Description System.String message The message to use for the exception. CryptographyException(String, Exception) This constructor creates a new instance of the CryptographyException class. Declaration public CryptographyException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. Exception innerException An optional inner exception reference."
  },
  "api/CG.Cryptography.CryptographyExtensions.html": {
    "href": "api/CG.Cryptography.CryptographyExtensions.html",
    "title": "Class CryptographyExtensions",
    "keywords": "Class CryptographyExtensions This class contains extension methods related to the ICryptography type. Inheritance System.Object CryptographyExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Cryptography Assembly : CG.Cryptography.dll Syntax public static class CryptographyExtensions Methods AesDecryptAsync(ICryptography, Byte[], Byte[], Byte[], CancellationToken) This method decrypts the given bytes using AES. Declaration public static async ValueTask<byte[]> AesDecryptAsync(this ICryptography cryptography, byte[] key, byte[] iv, byte[] value, CancellationToken cancellationToken = null) Parameters Type Name Description ICryptography cryptography The cryptography instance to use for the operation. System.Byte [] key The key to use for the operation. System.Byte [] iv The IV to use for the operation. System.Byte [] value The value to use for the operation. CancellationToken cancellationToken A cancellation token. Returns Type Description ValueTask < System.Byte []> A task to perform the operation that returns the decrypted bytes. AesDecryptAsync(ICryptography, Byte[], Byte[], String, CancellationToken) This method decrypts the given string using AES. Declaration public static ValueTask<string> AesDecryptAsync(this ICryptography cryptography, byte[] key, byte[] iv, string value, CancellationToken cancellationToken = null) Parameters Type Name Description ICryptography cryptography The cryptography instance to use for the operation. System.Byte [] key The key to use for the operation. System.Byte [] iv The IV to use for the operation. System.String value The value to use for the operation. CancellationToken cancellationToken A cancellation token. Returns Type Description ValueTask < System.String > A task to perform the operation that returns a decrypted string. AesEncryptAsync(ICryptography, Byte[], Byte[], Byte[], CancellationToken) This method encrypts the given bytes using AES. Declaration public static async ValueTask<byte[]> AesEncryptAsync(this ICryptography cryptography, byte[] key, byte[] iv, byte[] value, CancellationToken cancellationToken = null) Parameters Type Name Description ICryptography cryptography The cryptography instance to use for the operation. System.Byte [] key The key to use for the operation. System.Byte [] iv The IV to use for the operation. System.Byte [] value The value to use for the operation. CancellationToken cancellationToken A cancellation token. Returns Type Description ValueTask < System.Byte []> A task to perform the operation that returns the encrypted bytes. AesEncryptAsync(ICryptography, Byte[], Byte[], String, CancellationToken) This method encrypts the given string using AES. Declaration public static async ValueTask<string> AesEncryptAsync(this ICryptography cryptography, byte[] key, byte[] iv, string value, CancellationToken cancellationToken = null) Parameters Type Name Description ICryptography cryptography The cryptography instance to use for the operation. System.Byte [] key The key to use for the operation. System.Byte [] iv The IV to use for the operation. System.String value The value to use for the operation. CancellationToken cancellationToken A cancellation token. Returns Type Description ValueTask < System.String > A task to perform the operation that returns an encrypted string."
  },
  "api/CG.Cryptography.html": {
    "href": "api/CG.Cryptography.html",
    "title": "Namespace CG.Cryptography",
    "keywords": "Namespace CG.Cryptography Classes CryptographyException This class represents a cryptography related exception. CryptographyExtensions This class contains extension methods related to the ICryptography type. Interfaces ICryptography This interface represents an object that performs cryptographic operations."
  },
  "api/CG.Cryptography.ICryptography.html": {
    "href": "api/CG.Cryptography.ICryptography.html",
    "title": "Interface ICryptography",
    "keywords": "Interface ICryptography This interface represents an object that performs cryptographic operations. Namespace : CG.Cryptography Assembly : CG.Cryptography.dll Syntax public interface ICryptography Properties Logger This property contains a logger for cryptographic operations. Declaration ILogger<ICryptography> Logger { get; } Property Value Type Description ILogger < ICryptography > Methods GenerateKeyAndIVAsync(String, String, CancellationToken) This method generates a Key and IV from the given password and salt. Declaration ValueTask<(byte[], byte[])> GenerateKeyAndIVAsync(string password, string salt, CancellationToken cancellationToken = null) Parameters Type Name Description System.String password The password to use for the operation. System.String salt The salt to use for the operation. CancellationToken cancellationToken A cancellation token. Returns Type Description ValueTask < System.ValueTuple < System.Byte [], System.Byte []>> A task to perform the operation that returns a cryptographic key and IV value, in a tuple, as: (key, IV). Extension Methods CryptographyExtensions.AesEncryptAsync(ICryptography, Byte[], Byte[], String, CancellationToken) CryptographyExtensions.AesEncryptAsync(ICryptography, Byte[], Byte[], Byte[], CancellationToken) CryptographyExtensions.AesDecryptAsync(ICryptography, Byte[], Byte[], String, CancellationToken) CryptographyExtensions.AesDecryptAsync(ICryptography, Byte[], Byte[], Byte[], CancellationToken)"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes WebApplicationBuilderExtensions This class contains extension methods related to the type."
  },
  "api/Microsoft.Extensions.DependencyInjection.WebApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions",
    "keywords": "Class WebApplicationBuilderExtensions This class contains extension methods related to the type. Inheritance System.Object WebApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Cryptography.dll Syntax public static class WebApplicationBuilderExtensions Methods AddCryptography(WebApplicationBuilder, ServiceLifetime) This method adds the types required to support the type and any extensions to that type. Declaration public static WebApplicationBuilder AddCryptography(this WebApplicationBuilder webApplicationBuilder, ServiceLifetime serviceLifetime = ServiceLifetime.Singleton) Parameters Type Name Description WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Cryptography.dll contains cryptographic extensions used by other CodeGator pacakges."
  }
}